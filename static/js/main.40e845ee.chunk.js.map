{"version":3,"sources":["redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/store.js","components/Container/Container.js","components/Navigation.js","components/UserMenu/avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/ErrorBoundary/ErrorBoundary.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["getAllContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","axios","defaults","baseURL","addContact","number","dispatch","contact","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContacts","a","fetchContactRequest","get","fetchContactSuccess","fetchContactError","createAction","changeFilter","createReducer","payload","loading","combineReducers","token","headers","common","Authorization","register","createAsyncThunk","credentials","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","auth","console","log","rejectWithValue","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","styles","link","display","textDecoration","padding","fontWeight","color","fontSize","activeLink","Navigation","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","button","backgroundColor","border","borderRadius","cursor","UserMenu","useDispatch","useSelector","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","ErrorBoundary","props","errorOccurred","errorInfo","this","setState","Component","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","UploadView","App","useEffect","fallback","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+IAAA,kHACaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACzCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAQpCC,EAAqBC,YAChC,CAACP,EAAgBI,IACjB,SAACF,EAAUG,GACT,IAAMG,EAAmBH,EAAOI,cAEhC,OAAOP,EAASG,QAAO,qBAAGK,KACnBD,cAAcE,SAASH,U,yJCHlCI,IAAMC,SAASC,QAAU,wBAElB,IAYMC,EAAa,SAACL,EAAMM,GAAP,OAAkB,SAAAC,GAC1C,IAAMC,EAAU,CACdR,OACAM,UAEFC,EAASE,KAETP,IACGQ,KAAK,YAAaF,GAClBG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASM,YAAkBD,OAC9CE,OAAM,SAAAC,GAAK,OAAIR,EAASS,YAAgBD,SAGhCE,EAAgB,SAAAC,GAAE,OAAI,SAAAX,GACjCA,EAASY,eAETjB,IACGkB,OADH,oBACuBF,IACpBP,MAAK,kBAAMJ,EAASc,YAAqBH,OACzCJ,OAAM,SAAAC,GAAK,OAAIR,EAASe,YAAmBP,SAGjC,KACbQ,cAnC2B,yDAAM,WAAMhB,GAAN,iBAAAiB,EAAA,6DACjCjB,EAASkB,eADwB,kBAIRvB,IAAMwB,IAAI,aAJF,gBAIvBd,EAJuB,EAIvBA,KAERL,EAASoB,YAAoBf,IANE,gDAQ/BL,EAASqB,YAAkB,EAAD,KARK,yDAAN,uDAoC3BvB,aACAY,kB,+BCpDF,+VAEaQ,EAAsBI,YACjC,iCAEWF,EAAsBE,YACjC,iCAEWD,EAAoBC,YAAa,+BAEjCpB,EAAoBoB,YAAa,8BACjChB,EAAoBgB,YAAa,8BACjCb,EAAkBa,YAAa,4BAE/BV,EAAuBU,YAClC,iCAEWR,EAAuBQ,YAClC,iCAEWP,EAAqBO,YAAa,+BAElCC,EAAeD,YAAa,yB,kKCNnCpC,EAAQsC,YAAc,IAAD,mBACxBJ,KAAsB,SAACpC,EAAD,YAAUyC,WADR,cAExBnB,KAAoB,SAACtB,EAAD,YAAUyC,SAAV,mBAAqCzC,OAFjC,cAGxB8B,KAAuB,SAAC9B,EAAD,OAAUyC,EAAV,EAAUA,QAAV,OACtBzC,EAAMI,QAAO,qBAAGuB,KAAgBc,QAJT,IAOrBrC,EAASoC,YAAc,GAAD,eACzBD,KAAe,SAACvC,EAAD,YAAUyC,YAGtBC,EAAUF,aAAc,GAAD,mBAC1BtB,KAAoB,kBAAM,KADA,cAE1BI,KAAoB,kBAAM,KAFA,cAG1BG,KAAkB,kBAAM,KAHE,cAK1BS,KAAsB,kBAAM,KALF,cAM1BE,KAAsB,kBAAM,KANF,cAO1BC,KAAoB,kBAAM,KAPA,cAS1BT,KAAuB,kBAAM,KATH,cAU1BE,KAAuB,kBAAM,KAVH,cAW1BC,KAAqB,kBAAM,KAXD,IAcvBP,EAAQgB,YAAc,KAAM,IAEnBG,cAAgB,CAC7BzC,QACAE,SACAsC,UACAlB,W,oOC5CFb,IAAMC,SAASC,QAAU,2CAEzB,I,EAAM+B,EAAQ,SACRA,GACFjC,IAAMC,SAASiC,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVjC,IAAMC,SAASiC,QAAQC,OAAOC,cAAgB,IAS5CC,EAAWC,YAAiB,gBAAD,uCAAkB,WAAMC,GAAN,iBAAAjB,EAAA,+EAExBtB,IAAMQ,KAAK,gBAAiB+B,GAFJ,uBAEvC7B,EAFuC,EAEvCA,KACRuB,EAAUvB,EAAKuB,OAHgC,kBAIxCvB,GAJwC,yFAAlB,uDAe3B8B,EAAQF,YAAiB,aAAD,uCAAe,WAAMC,GAAN,iBAAAjB,EAAA,+EAElBtB,IAAMQ,KAAK,eAAgB+B,GAFT,uBAEjC7B,EAFiC,EAEjCA,KACRuB,EAAUvB,EAAKuB,OAH0B,kBAIlCvB,GAJkC,yFAAf,uDA2Df+B,EANI,CACjBJ,WACAK,OAxCaJ,YAAiB,cAAD,sBAAgB,sBAAAhB,EAAA,+EAErCtB,IAAMQ,KAAK,iBAF0B,OAG3CyB,IAH2C,wGAyC7CO,QACAG,iBAzBuBL,YACvB,eADuC,uCAEvC,WAAOM,EAAGC,GAAV,qBAAAvB,EAAA,yDACQjC,EAAQwD,EAASC,WAGA,QAFjBC,EAAiB1D,EAAM2D,KAAKf,OAFpC,uBAKIgB,QAAQC,IAAI,+HALhB,kBAMWL,EAASM,mBANpB,cASElB,EAAUc,GATZ,kBAW2B/C,IAAMwB,IAAI,kBAXrC,uBAWYd,EAXZ,EAWYA,KAXZ,kBAYWA,GAZX,4FAFuC,0DCvD1B0C,EALO,CACpBC,cAPoB,SAAAhE,GAAK,OAAIA,EAAM2D,KAAKM,YAQxCC,YANkB,SAAAlE,GAAK,OAAIA,EAAM2D,KAAKQ,KAAK1D,MAO3C2D,qBAL2B,SAAApE,GAAK,OAAIA,EAAM2D,KAAKU,wB,OC+BlCC,EA1BGC,YAAY,CAC5B9D,KAAM,OACN+D,aARmB,CACnBL,KAAM,CAAE1D,KAAM,KAAMgE,MAAO,MAC3B7B,MAAO,KACPqB,YAAY,GAMZS,eAAa,mBACVC,EAAe3B,SAAS4B,WADd,SACyB5E,EAAO6E,GACzC7E,EAAMmE,KAAOU,EAAOpC,QAAQ0B,KAC5BnE,EAAM4C,MAAQiC,EAAOpC,QAAQG,MAC7B5C,EAAMiE,YAAa,KAJV,cAMVU,EAAexB,MAAMyB,WANX,SAMsB5E,EAAO6E,GACtC7E,EAAMmE,KAAOU,EAAOpC,QAAQ0B,KAC5BnE,EAAM4C,MAAQiC,EAAOpC,QAAQG,MAC7B5C,EAAMiE,YAAa,KATV,cAWVU,EAAetB,OAAOuB,WAXZ,SAWuB5E,EAAO6E,GACvC7E,EAAMmE,KAAO,CAAE1D,KAAM,KAAMgE,MAAO,MAClCzE,EAAM4C,MAAQ,KACd5C,EAAMiE,YAAa,KAdV,cAgBVU,EAAerB,iBAAiBsB,WAhBtB,SAgBiC5E,EAAO6E,GACjD7E,EAAMmE,KAAOU,EAAOpC,QACpBzC,EAAMiE,YAAa,KAlBV,KAuBf,S,uMClBMa,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAEIC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPpC,KAAMqC,YAAeP,EAAmBQ,KACxChG,SAAUiG,KAEZpB,aACAqB,UAAUC,IAGCC,EAAYC,YAAaT,GC7BvBU,G,wBARG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,MCC/BE,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,OACPC,SAAU,IAEZC,WAAY,CACVF,MAAO,WAkDIG,EA9CI,WAEjB,OACE,gCACE,cAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAACC,MAAOZ,EAAOC,KAAMY,YAAab,EAAOQ,WAA9D,6BAIA,cAAC,IAAD,CACEE,GAAG,YACHC,OAAK,EACLC,MAAOZ,EAAOC,KACdY,YAAab,EAAOQ,WAJtB,0BC3BS,MAA0B,mCCInCR,EAAS,CACbc,UAAW,CACTZ,QAAS,OACTa,WAAY,UAEdC,OAAQ,CACNC,YAAa,GAEflH,KAAM,CACJsG,WAAY,IACZY,YAAa,GACbX,MAAO,UAGTY,OAAQ,CACNC,gBAAiB,UACjBb,MAAO,SACPF,QAAS,GACTgB,OAAQ,OACRC,aAAc,MACdC,OAAQ,YAKG,SAASC,IACtB,IAAMjH,EAAWkH,cACXzH,EAAO0H,YAAYpE,IAAcG,aAEjCwD,EAASU,EAEf,OACE,sBAAKd,MAAOZ,EAAOc,UAAnB,UACE,qBAAKa,IAAKX,EAAQY,IAAI,GAAGC,MAAM,KAAKjB,MAAOZ,EAAOgB,SAClD,uBAAMJ,MAAOZ,EAAOjG,KAApB,sBAAoCA,KAGpC,wBAAQ+H,KAAK,SAASlB,MAAOZ,EAAOkB,OAAQa,QAAS,kBAAMzH,EAAS2D,IAAetB,WAAnF,uBCtCN,IAAMqD,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZE,SAAU,GACVD,MAAO,QAETE,WAAY,CACVF,MAAO,WAII,SAAS0B,IACtB,OACE,gCACE,cAAC,IAAD,CACEtB,GAAG,YACHC,OAAK,EACLC,MAAOZ,EAAOC,KACdY,YAAab,EAAOQ,WAJtB,oBAQA,cAAC,IAAD,CACEE,GAAG,SACHC,OAAK,EACLC,MAAOZ,EAAOC,KACdY,YAAab,EAAOQ,WAJtB,sBCtBN,IAAMR,EAAS,CACbiC,OAAQ,CACN/B,QAAS,OACTgC,eAAgB,gBAChBnB,WAAY,SACZoB,aAAc,sBAIH,SAASC,IACtB,IAAM7E,EAAakE,YAAYpE,IAAcC,eAC7C,OACE,yBAAQsD,MAAOZ,EAAOiC,OAAtB,UACE,cAAC,EAAD,IACC1E,EAAa,cAACgE,EAAD,IAAe,cAACS,EAAD,O,2CCMpBK,E,kDAvBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDhJ,MAAQ,CAAEiJ,eAAe,GAFb,E,8DAKDzH,EAAO0H,GAEvBC,KAAKC,SAAS,CACZ5H,MAAOA,EACP0H,UAAWA,M,+BAMb,OAAOC,KAAKnJ,MAAMiJ,cAChB,uDAEAE,KAAKH,MAAMxC,a,GAnBW6C,a,wBCGb,SAASC,EAAT,GAIX,IAHA9C,EAGD,EAHCA,SAGD,IAFC+C,kBAED,MAFc,IAEd,EADIC,EACJ,yCACOvF,EAAakE,YAAYpE,IAAcC,eAC7C,OACI,cAAC,IAAD,2BAAWwF,GAAX,aACKvF,EAAauC,EAAW,cAAC,IAAD,CAAUY,GAAImC,OCPpC,SAASE,EAAT,GAKX,IAJAjD,EAID,EAJCA,SAID,IAHCkD,kBAGD,aAFCH,kBAED,MAFc,IAEd,EADIC,EACJ,sDAEOG,EADaxB,YAAYpE,IAAcC,gBACR0F,EACrC,OACI,cAAC,IAAD,2BAAWF,GAAX,aACKG,EAAiB,cAAC,IAAD,CAAUvC,GAAImC,IAAiB/C,K,UCKvDoD,EAAWC,gBAAK,kBAAM,gCACtBC,EAAeD,gBAAK,kBAAM,gCAC1BE,EAAYF,gBAAK,kBAAM,gCACvBG,EAAeH,gBAAK,kBAAM,iCAC1BI,EAAaJ,gBAAK,kBAAM,iCAGf,SAASK,IACtB,IAAMlJ,EAAWkH,cACX7D,EAAwB8D,YAAYpE,IAAcK,sBAMxD,OAJA+F,qBAAU,WACRnJ,EAAS2D,IAAerB,sBACvB,CAACtC,IAGF,cAAC,EAAD,UACE,eAAC,EAAD,WACGqD,EACC,gDAEE,qCACE,cAACyE,EAAD,IAEA,cAAC,IAAD,UACE,eAAC,WAAD,CAAUsB,SAAU,2CAApB,UACE,cAACX,EAAD,CAAapC,OAAK,EAACgD,KAAK,IAAxB,SACE,cAACT,EAAD,MAEF,cAACH,EAAD,CAAapC,OAAK,EAACgD,KAAK,YAAYX,YAAU,EAA9C,SACE,cAACI,EAAD,MAEF,cAACL,EAAD,CAAapC,OAAK,EAACgD,KAAK,SAASd,WAAW,SAASG,YAAU,EAA/D,SACE,cAACK,EAAD,MAEF,cAACT,EAAD,CAAce,KAAK,YAAYC,UAAWN,EAAcT,WAAW,WACnE,cAACD,EAAD,CAAce,KAAK,UAAUd,WAAW,SAAxC,SACE,cAACU,EAAD,cAOZ,cAAC,IAAD,SCjER,IAYeM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrJ,MAAK,YAAkD,IAA/CsJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCOdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUpF,MAAOA,EAAjB,SAEE,cAAC,IAAD,CAAanD,QAAS,KAAM2D,UAAWA,EAAvC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKR6E,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.40e845ee.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nexport const getAllContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nconst getLoader = state => state.contacts.loading;\n\nconst getTotalContacts = state => {\n  const todos = getAllContacts(state);\n  return todos.length;\n};\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nconst contactSelectors = {\n  getAllContacts,\n  getFilter,\n  getLoader,\n  getVisibleContacts,\n  getTotalContacts,\n};\nexport default contactSelectors;\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest);\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction(\n  'contacts/fetchcontactsRequest',\n);\nexport const fetchContactSuccess = createAction(\n  'contacts/fetchcontactsSuccess',\n);\nexport const fetchContactError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacs/changeFilter');\n","import { combineReducers } from 'redux';\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk('/users/signup', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n\n\n\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\nimport logger from 'redux-logger';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import T from 'prop-types';\nimport '../Container/Container.css';\n\nconst Container = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nContainer.propTypes = {\n  children: T.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\n// import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n// import { authSelectors } from '../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: 'pink',\n    fontSize: 20\n  },\n  activeLink: {\n    color: 'purple',\n  },\n};\n\nconst Navigation = () => {\n  // const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        ⌂ Homepage\n    </NavLink>\n\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n    </NavLink>\n\n      {/* {isLoggedIn && (\n        <>\n\n          <NavLink\n            to=\"/contacts\"\n            exact\n            style={styles.link}\n            activeStyle={styles.activeLink}\n          >\n            Contacts\n    </NavLink>\n\n          <NavLink\n            to=\"/upload\"\n            exact\n            style={styles.link}\n            activeStyle={styles.activeLink}\n          >\n            Загрузить\n          </NavLink>\n        </>\n      )} */}\n    </nav>\n\n  )\n}\n\n\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/avatar.277c05cc.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n    color: 'purple'\n  },\n\n  button: {\n    backgroundColor: '#ffb6c1',\n    color: 'purple',\n    padding: 12,\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n  }\n\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  // get name of the user\n  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Welcome, {name}</span>\n\n      {/* dispatch is needed to log out */}\n      <button type=\"button\" style={styles.button} onClick={() => dispatch(authOperations.logOut())}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    fontSize: 20,\n    color: 'pink',\n  },\n  activeLink: {\n    color: 'purple',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Signup\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { errorOccurred: false };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    return this.state.errorOccurred ? (\n      <h1>Something went wrong!</h1>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport default ErrorBoundary;\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n\r\nexport default function PrivateRoute({\r\n    children,\r\n    redirectTo = '/',\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n\r\n\r\nexport default function PublicRoute({\r\n    children,\r\n    restricted = false,\r\n    redirectTo = '/',\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n        </Route>\r\n    );\r\n}","import './App.css';\nimport { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import shortid from 'shortid';\nimport Container from './components/Container/Container';\n// import ContactsView from './views/ContactsView';\n// import HomeView from './views/Homepage';\n// import RegisterView from './views/RegisterView';\n// import LoginView from './views/LoginView';\nimport AppBar from './components/AppBar';\nimport { Switch } from 'react-router-dom';\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\nimport { ToastContainer } from 'react-toastify';\nimport { authOperations, authSelectors } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute'\nimport PublicRoute from './components/PublicRoute'\n\n\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst HomeView = lazy(() => import('./views/Homepage'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\nconst UploadView = lazy(() => import('./views/UploadView'));\n\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <ErrorBoundary>\n      <Container>\n        {isFetchingCurrentUser ? (\n          <h1>React Skeleton</h1>\n        ) : (\n            <>\n              <AppBar />\n\n              <Switch>\n                <Suspense fallback={<p>Loading...</p>}>\n                  <PublicRoute exact path=\"/\">\n                    <HomeView />\n                  </PublicRoute>\n                  <PublicRoute exact path=\"/register\" restricted>\n                    <RegisterView />\n                  </PublicRoute>\n                  <PublicRoute exact path=\"/login\" redirectTo=\"/todos\" restricted>\n                    <LoginView />\n                  </PublicRoute>\n                  <PrivateRoute path=\"/contacts\" component={ContactsView} redirectTo=\"/login\" />\n                  <PrivateRoute path=\"/upload\" redirectTo=\"/login\">\n                    <UploadView />\n                  </PrivateRoute>\n\n                </Suspense>\n              </Switch>\n            </>\n          )}\n        <ToastContainer />\n      </Container>\n    </ErrorBoundary>\n  );\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n// import { store, persistor } from './redux/store';\nimport { store, persistor } from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* checks local storage, fill in redux state */}\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}