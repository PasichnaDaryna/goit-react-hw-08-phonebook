{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegisterView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","header","color","fontSize","label","display","flexDirection","marginBottom","fontWeight","input","padding","border","borderRadius","boxSizing","marginTop","resize","button","backgroundColor","cursor","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","style","onSubmit","e","preventDefault","authOperations","register","autoComplete","type","onChange"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,uHIDhGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,OAAQ,CACNC,MAAO,SACPC,SAAU,IAGZC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,GACdJ,SAAU,OACVD,MAAO,SACPM,WAAY,KAGdC,MAAO,CACLT,MAAO,QACPU,QAAS,OACTC,OAAQ,iBACRC,aAAc,MACdC,UAAW,aACXC,UAAW,MACXP,aAAc,OACdQ,OAAQ,YAEVC,OAAQ,CACNC,gBAAiB,QACjBf,MAAO,UACPQ,QAAS,YACTC,OAAQ,OACRC,aAAc,MACdM,OAAQ,YAIG,SAASC,IACtB,IAAMC,EAAWC,cADoB,EAEbC,mBAAS,IAFI,mBAE9BC,EAF8B,KAExBC,EAFwB,OAGXF,mBAAS,IAHE,mBAG9BG,EAH8B,KAGvBC,EAHuB,OAILJ,mBAAS,IAJJ,mBAI9BK,EAJ8B,KAIpBC,EAJoB,KAM/BC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAM9B,EAAc,EAAdA,MACtC,OAAQ8B,GACN,IAAK,OACH,OAAOC,EAAQ/B,GACjB,IAAK,QACH,OAAOiC,EAASjC,GAClB,IAAK,WACH,OAAOmC,EAAYnC,GACrB,QACE,SAYN,OACE,gCACE,oBAAIsC,MAAOjC,EAAOG,OAAlB,gCAEA,uBAAM+B,SAZW,SAAAC,GACnBA,EAAEC,iBACFd,EAASe,IAAeC,SAAS,CAAEb,OAAME,QAAOE,cAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOoBG,MAAOjC,EAAOC,KAAMsC,aAAa,MAA/D,UACE,wBAAON,MAAOjC,EAAOM,MAArB,iBAEE,uBAAOkC,KAAK,OAAOf,KAAK,OACtBQ,MAAOjC,EAAOW,MACdhB,MAAO8B,EACPgB,SAAUV,OAGd,wBAAOE,MAAOjC,EAAOM,MAArB,kBAEE,uBACEkC,KAAK,QACLf,KAAK,QACLQ,MAAOjC,EAAOW,MACdhB,MAAOgC,EACPc,SAAUV,OAId,wBAAOE,MAAOjC,EAAOM,MAArB,qBAEE,uBACEkC,KAAK,WACLf,KAAK,WACL9B,MAAOkC,EACPI,MAAOjC,EAAOW,MACd8B,SAAUV,OAId,wBAAQS,KAAK,SAASP,MAAOjC,EAAOkB,OAApC","file":"static/js/5.ecca6edc.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  header: {\n    color: 'purple',\n    fontSize: 20\n\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n    fontSize: '20px',\n    color: 'purple',\n    fontWeight: 700\n\n  },\n  input: {\n    width: '100 %',\n    padding: '12px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    boxSizing: 'border-box',\n    marginTop: '6px',\n    marginBottom: '16px',\n    resize: 'vertical'\n  },\n  button: {\n    backgroundColor: 'white',\n    color: ' purple',\n    padding: \"12px 20px\",\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n  }\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1 style={styles.header}>â˜› Signup page</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Name\n          <input type=\"text\" name=\"name\"\n            style={styles.input}\n            value={name}\n            onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            style={styles.input}\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            style={styles.input}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\" style={styles.button}>Signup</button>\n      </form>\n    </div>\n  );\n}\n"],"sourceRoot":""}