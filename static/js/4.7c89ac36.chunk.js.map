{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","header","color","fontSize","label","display","flexDirection","marginBottom","input","padding","border","borderRadius","boxSizing","marginTop","resize","button","backgroundColor","cursor","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","style","onSubmit","e","preventDefault","authOperations","logIn","autoComplete","type","onChange"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,uHIDhGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAGTC,OAAQ,CACNC,MAAO,SACPC,SAAU,IAGZC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,GACdJ,SAAU,OACVD,MAAO,UAGTM,MAAO,CACLR,MAAO,QACPS,QAAS,OACTC,OAAQ,iBACRC,aAAc,MACdC,UAAW,aACXC,UAAW,MACXN,aAAc,OACdO,OAAQ,YAEVC,OAAQ,CACNC,gBAAiB,QACjBd,MAAO,SACPO,QAAS,YACTC,OAAQ,OACRC,aAAc,MACdM,OAAQ,YAIG,SAASC,IACtB,IAAMC,EAAWC,cADiB,EAERC,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGFF,mBAAS,IAHP,mBAG3BG,EAH2B,KAGjBC,EAHiB,KAK5BC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMnC,EAAc,EAAdA,MACtC,OAAQmC,GACN,IAAK,QACH,OAAOL,EAAS9B,GAClB,IAAK,WACH,OAAOgC,EAAYhC,GACrB,QACE,SAWN,OACE,gCACE,oBAAIoC,MAAO/B,EAAOG,OAAlB,8BAEA,uBAAM6B,SAXW,SAAAC,GACnBA,EAAEC,iBACFb,EAASc,IAAeC,MAAM,CAAEZ,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAOoBI,MAAO/B,EAAOC,KAAMoC,aAAa,MAA/D,UACE,wBAAON,MAAO/B,EAAOM,MAArB,kBAEE,uBACEgC,KAAK,QACLR,KAAK,QACLnC,MAAO6B,EACPO,MAAO/B,EAAOU,MACd6B,SAAUX,OAId,wBAAOG,MAAO/B,EAAOM,MAArB,qBAEE,uBACEgC,KAAK,WACLR,KAAK,WACLC,MAAO/B,EAAOU,MACdf,MAAO+B,EACPa,SAAUX,OAId,wBAAQU,KAAK,SAASP,MAAO/B,EAAOiB,OAApC","file":"static/js/4.7c89ac36.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n\n  header: {\n    color: 'purple',\n    fontSize: 20\n\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n    fontSize: '20px',\n    color: 'purple'\n  },\n\n  input: {\n    width: '100 %',\n    padding: '12px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    boxSizing: 'border-box',\n    marginTop: '6px',\n    marginBottom: '16px',\n    resize: 'vertical'\n  },\n  button: {\n    backgroundColor: 'white',\n    color: 'purple',\n    padding: \"12px 20px\",\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n  }\n};\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1 style={styles.header}>‚çàLogin page</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            style={styles.input}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            style={styles.input}\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\" style={styles.button}>Login</button>\n      </form>\n    </div>\n  );\n}\n"],"sourceRoot":""}