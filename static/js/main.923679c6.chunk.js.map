{"version":3,"sources":["redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/store.js","components/Container/Container.js","components/Navigation.js","components/UserMenu/avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/ErrorBoundary/ErrorBoundary.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["getAllContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","axios","defaults","baseURL","addContact","number","dispatch","contact","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContacts","a","fetchContactRequest","get","fetchContactSuccess","fetchContactError","createAction","changeFilter","createReducer","payload","loading","combineReducers","token","headers","common","Authorization","register","createAsyncThunk","credentials","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","auth","console","log","rejectWithValue","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","styles","link","display","textDecoration","padding","fontWeight","color","fontSize","activeLink","Navigation","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","button","backgroundColor","border","borderRadius","cursor","UserMenu","useDispatch","useSelector","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","ErrorBoundary","props","errorOccurred","errorInfo","this","setState","Component","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","UploadView","App","useEffect","fallback","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.923679c6.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\nexport const getAllContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nconst getLoader = state => state.contacts.loading;\r\n\r\nconst getTotalContacts = state => {\r\n  const todos = getAllContacts(state);\r\n  return todos.length;\r\n};\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nconst contactSelectors = {\r\n  getAllContacts,\r\n  getFilter,\r\n  getLoader,\r\n  getVisibleContacts,\r\n  getTotalContacts,\r\n};\r\nexport default contactSelectors;\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(addContactRequest);\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction(\r\n  'contacts/fetchcontactsRequest',\r\n);\r\nexport const fetchContactSuccess = createAction(\r\n  'contacts/fetchcontactsSuccess',\r\n);\r\nexport const fetchContactError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacs/changeFilter');\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body: { name, email, password }\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = createAsyncThunk('/users/signup', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/login\r\n * body: { email, password }\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers: Authorization: Bearer token\r\n * После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      console.log('Токена нет, уходим из fetchCurrentUser');\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      // TODO: Добавить обработку ошибки error.message\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n};\r\nexport default authSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import T from 'prop-types';\r\nimport '../Container/Container.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: T.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n// import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n// import { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: 'pink',\r\n    fontSize: 20,\r\n  },\r\n  activeLink: {\r\n    color: 'purple',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  // const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        ⌂ Homepage\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n\r\n      {/* {isLoggedIn && (\r\n        <>\r\n\r\n          <NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Contacts\r\n    </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/upload\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Загрузить\r\n          </NavLink>\r\n        </>\r\n      )} */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/avatar.277c05cc.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './avatar.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n    color: 'purple',\r\n  },\r\n\r\n  button: {\r\n    backgroundColor: '#ffb6c1',\r\n    color: 'purple',\r\n    padding: 12,\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  // get name of the user\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n\r\n      {/* dispatch is needed to log out */}\r\n      <button\r\n        type=\"button\"\r\n        style={styles.button}\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    fontSize: 20,\r\n    color: 'pink',\r\n  },\r\n  activeLink: {\r\n    color: 'purple',\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Signup\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { errorOccurred: false };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo,\r\n    });\r\n    // You can also log error messages to an error reporting service here\r\n  }\r\n\r\n  render() {\r\n    return this.state.errorOccurred ? (\r\n      <h1>Something went wrong!</h1>\r\n    ) : (\r\n      this.props.children\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import './App.css';\r\nimport { useEffect, Suspense, lazy } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import shortid from 'shortid';\r\nimport Container from './components/Container/Container';\r\n// import ContactsView from './views/ContactsView';\r\n// import HomeView from './views/Homepage';\r\n// import RegisterView from './views/RegisterView';\r\n// import LoginView from './views/LoginView';\r\nimport AppBar from './components/AppBar';\r\nimport { Switch } from 'react-router-dom';\r\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { authOperations, authSelectors } from './redux/auth';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst HomeView = lazy(() => import('./views/Homepage'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsView'));\r\nconst UploadView = lazy(() => import('./views/UploadView'));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <Container>\r\n        {isFetchingCurrentUser ? (\r\n          <h1>React Skeleton</h1>\r\n        ) : (\r\n          <>\r\n            <AppBar />\r\n\r\n            <Switch>\r\n              <Suspense fallback={<p>Loading...</p>}>\r\n                <PublicRoute exact path=\"/\">\r\n                  <HomeView />\r\n                </PublicRoute>\r\n                <PublicRoute exact path=\"/register\" restricted>\r\n                  <RegisterView />\r\n                </PublicRoute>\r\n                <PublicRoute exact path=\"/login\" redirectTo=\"/todos\" restricted>\r\n                  <LoginView />\r\n                </PublicRoute>\r\n                <PrivateRoute\r\n                  path=\"/contacts\"\r\n                  component={ContactsView}\r\n                  redirectTo=\"/login\"\r\n                />\r\n                <PrivateRoute path=\"/upload\" redirectTo=\"/login\">\r\n                  <UploadView />\r\n                </PrivateRoute>\r\n              </Suspense>\r\n            </Switch>\r\n          </>\r\n        )}\r\n        <ToastContainer />\r\n      </Container>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\n// import { store, persistor } from './redux/store';\r\nimport { store, persistor } from './redux/store';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* checks local storage, fill in redux state */}\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}